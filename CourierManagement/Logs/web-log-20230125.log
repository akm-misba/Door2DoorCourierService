2023-01-25 18:44:16.631 +06:00 [INF] Application Starting up
2023-01-25 18:51:44.744 +06:00 [INF] Application Starting up
2023-01-25 19:01:17.379 +06:00 [INF] Application Starting up
2023-01-25 19:04:04.944 +06:00 [INF] Application Starting up
2023-01-25 19:11:57.075 +06:00 [INF] Application Starting up
2023-01-25 19:20:49.621 +06:00 [INF] Application Starting up
2023-01-25 19:23:11.832 +06:00 [INF] Application Starting up
2023-01-25 19:24:04.376 +06:00 [INF] Application Starting up
2023-01-25 19:33:25.936 +06:00 [INF] Application Starting up
2023-01-25 19:56:40.911 +06:00 [INF] Application Starting up
2023-01-25 20:00:16.034 +06:00 [INF] Application Starting up
2023-01-25 20:09:01.015 +06:00 [INF] Application Starting up
2023-01-25 20:17:21.061 +06:00 [INF] Application Starting up
2023-01-25 20:23:46.540 +06:00 [INF] Application Starting up
2023-01-25 20:28:55.744 +06:00 [INF] Application Starting up
2023-01-25 20:40:32.697 +06:00 [INF] Application Starting up
2023-01-25 20:43:20.904 +06:00 [INF] Application Starting up
2023-01-25 20:55:04.245 +06:00 [INF] Application Starting up
2023-01-25 20:57:55.877 +06:00 [INF] Application Starting up
2023-01-25 20:58:55.569 +06:00 [INF] Application Starting up
2023-01-25 21:05:46.096 +06:00 [INF] Application Starting up
2023-01-25 21:08:16.631 +06:00 [INF] Application Starting up
2023-01-25 21:11:30.115 +06:00 [INF] Application Starting up
2023-01-25 21:13:20.673 +06:00 [INF] Application Starting up
2023-01-25 21:17:28.618 +06:00 [INF] Application Starting up
2023-01-25 21:18:32.361 +06:00 [INF] Application Starting up
2023-01-25 21:54:55.208 +06:00 [INF] Application Starting up
2023-01-25 22:01:55.285 +06:00 [INF] Application Starting up
2023-01-25 22:17:43.852 +06:00 [INF] Application Starting up
2023-01-25 22:19:40.303 +06:00 [INF] Application Starting up
2023-01-25 22:20:58.409 +06:00 [ERR] Add Order Failed
System.InvalidOperationException: A second operation was started on this context before a previous operation completed. This is usually caused by different threads concurrently using the same instance of DbContext. For more information on how to avoid threading issues with DbContext, see https://go.microsoft.com/fwlink/?linkid=2097913.
   at Microsoft.EntityFrameworkCore.Internal.ConcurrencyDetector.EnterCriticalSection()
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(IList`1 entriesToSave)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(DbContext _, Boolean acceptAllChangesOnSuccess)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(Boolean acceptAllChangesOnSuccess)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChanges(Boolean acceptAllChangesOnSuccess)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChanges()
   at CourierManagement.Data.UnitOfWork.Save() in E:\CourierManagement\CourierManagement\CourierManagement.Data\UnitOfWork.cs:line 15
   at CourierManagement.Training.Services.OrderService.AddOrder(Order order) in E:\CourierManagement\CourierManagement\CourierManagement.Training\Services\OrderService.cs:line 38
   at CourierManagement.Areas.Admin.Models.AddOrderModel.AddOrder() in E:\CourierManagement\CourierManagement\CourierManagement\Areas\Admin\Models\AddOrderModel.cs:line 47
   at CourierManagement.Areas.Admin.Controllers.CourierController.AddOrder(AddOrderModel model) in E:\CourierManagement\CourierManagement\CourierManagement\Areas\Admin\Controllers\CourierController.cs:line 934
